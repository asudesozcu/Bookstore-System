/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.bookstoreautomation;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author sozcu
 */
public class ManageBooks extends javax.swing.JFrame {

    /**
     * Creates new form AdminMain
     */
    private void refreshTable() {
        Connection connection = null;

        try {
            String url = "jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL";
            connection = DriverManager.getConnection(url, "root", "root");

            // Sorgu hazırlama
            String sql = "SELECT name, ISBN, type, author, price, stock FROM books";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);

            // Sorguyu yürütme
            ResultSet resultSet = preparedStatement.executeQuery();

            // jTable1'e veri eklemek için DefaultTableModel kullanma
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Tabloyu temizleme

            // ResultSet'ten verileri okuma ve jTable1'e ekleme
            while (resultSet.next()) {
                Object[] row = {
                    resultSet.getString("name"),
                    resultSet.getString("ISBN"),
                    resultSet.getString("type"),
                    resultSet.getString("author"),
                    resultSet.getDouble("price"),
                    resultSet.getInt("stock"),};
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Bağlantıyı kapatma
            if (connection != null) {
                try {
                    connection.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    String[] columnNames = {"Name", "ISBN", "Category", "Author", "Price", "Stock"};
    DefaultTableModel tableModel = new DefaultTableModel();

    public ManageBooks() {

        initComponents();
        tableModel.setColumnIdentifiers(columnNames);
        jTable1.setModel(tableModel);
        refreshTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        SetPrice = new javax.swing.JButton();
        txtISBN = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtstock = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        btnFıle = new javax.swing.JButton();
        btnQuery1 = new javax.swing.JButton();
        SetStock = new javax.swing.JButton();
        txtprice = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenu2 = new javax.swing.JMenu();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 250, 221));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 766));

        jPanel14.setBackground(new java.awt.Color(0, 0, 153));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 40)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Register Book");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(14, 14, 14))
        );

        jTable1.setBackground(new java.awt.Color(204, 255, 242));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NAME", "ISBN", "CATEGORY", "AUTHOR", "PRICE", "STOCK"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        SetPrice.setBackground(new java.awt.Color(255, 255, 255));
        SetPrice.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        SetPrice.setText("Set Price");
        SetPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetPriceActionPerformed(evt);
            }
        });

        txtISBN.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        txtAuthor.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        txtstock.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("ISBN :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Name :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Author :");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Category :");

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel13.setText("Book Details");

        btnFıle.setBackground(new java.awt.Color(255, 255, 255));
        btnFıle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnFıle.setText("Record Data to File");
        btnFıle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFıleActionPerformed(evt);
            }
        });

        btnQuery1.setBackground(new java.awt.Color(255, 255, 255));
        btnQuery1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnQuery1.setText("Query");
        btnQuery1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuery1ActionPerformed(evt);
            }
        });

        SetStock.setBackground(new java.awt.Color(255, 255, 255));
        SetStock.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        SetStock.setText("Set Stock");
        SetStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetStockActionPerformed(evt);
            }
        });

        txtprice.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel14.setText("Write new price :");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel15.setText("Write new stock :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CHOOSE ONE", "NOVEL", "POETRY", "SCIENCE_FICTION", "HISTORY", "BIOGRAPHY", "EDUCATION", "CHILDREN", "OTHER" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton2.setText("Show All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnQuery1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabel15)
                                        .addGap(39, 39, 39))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtstock, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(SetStock, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(SetPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnFıle)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel12)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(btnQuery1)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton2))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(SetPrice)))))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SetStock)
                                .addComponent(txtstock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnFıle)
                        .addGap(14, 14, 14))
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Edit");
        jMenu1.add(jSeparator1);

        jSeparator2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator2.setFocusable(true);
        jMenu1.add(jSeparator2);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Show Price");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);
        jMenu1.add(jSeparator3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Operations");
        jMenu2.add(jSeparator4);

        jSeparator5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSeparator5.setFocusable(true);
        jMenu2.add(jSeparator5);

        jMenu6.setText("Book");

        jMenuItem6.setText("Add Book");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem6);

        jMenu2.add(jMenu6);
        jMenu2.add(jSeparator6);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 856, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        TableColumn column = jTable1.getColumnModel().getColumn(4);

        if (!jCheckBoxMenuItem1.isSelected()) {

            // Sütunu gizle
            column.setMinWidth(0);
            column.setMaxWidth(0);
            column.setWidth(0);
            column.setPreferredWidth(0);
        } else {

            column.setMinWidth(50);
            column.setMaxWidth(50);
            column.setWidth(50);
            column.setPreferredWidth(50);
        }
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        AddBook newp = new AddBook();
        newp.setVisible(true);
        this.dispose();


    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void SetPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetPriceActionPerformed
        int selectedRow = jTable1.getSelectedRow();

// Seçili satırın ISBN değerini al
        String selectedIsbn = tableModel.getValueAt(selectedRow, 1).toString();

// Kullanıcının girdiği metni çift türüne çevirme
        try {
            double newPrice = Double.parseDouble(txtprice.getText());

            for (Books book : DataBase.allbooks) {
                if (book.getISBN() == Integer.parseInt(selectedIsbn)) {
                    book.setPrice(newPrice);
                    break;
                }
            }

            tableModel.setValueAt(newPrice, selectedRow, 4); // 4. sütun price sütunu

            try ( Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "root")) {
                // SQL sorgusunu oluştur
                String updateQuery = "UPDATE books SET price = ? WHERE ISBN = ?";
                try ( PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
                    // Parametreleri set et
                    preparedStatement.setDouble(1, newPrice);
                    preparedStatement.setInt(2, Integer.parseInt(selectedIsbn));

                    preparedStatement.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Price updated in database");
                }
            }
        } catch (Exception e) {
            // Kullanıcının girdiği metni çift türüne çeviremezse
            JOptionPane.showMessageDialog(this, "Please enter a valid numeric price.");
            e.printStackTrace();
        } 


    }//GEN-LAST:event_SetPriceActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the ISBN from the selected row
        int selectedIsbn = Integer.parseInt(tableModel.getValueAt(selectedRow, 1).toString());

        // Remove the book from the ArrayList
        Books removedBook = null;
        for (Books book : DataBase.allbooks) {
            if (book.getISBN() == selectedIsbn) {
                removedBook = book;
                break;
            }
        }
        if (removedBook != null) {
            DataBase.allbooks.remove(removedBook);
        }

        // Remove the selected row from the JTable
        tableModel.removeRow(selectedRow);

        // Remove the corresponding record from the database
        removeFromDatabase(selectedRow);

        JOptionPane.showMessageDialog(this, "Record removed successfully");
    }//GEN-LAST:event_btnDeleteActionPerformed
    private static void removeFromDatabase(int rowIndex) {
        // Check if the list is not empty and the index is within bounds
        if (DataBase.allbooks.isEmpty() || rowIndex < 0 || rowIndex >= DataBase.allbooks.size()) {
            // Handle the case where the list is empty or the index is out of bounds
            System.out.println("Invalid index or empty list.");
            return;
        }

        String url = "jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL";

        try ( Connection connection = DriverManager.getConnection(url, "root", "root")) {
            String sql = "DELETE FROM books WHERE ISBN = ?";
            try ( PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setInt(1, DataBase.allbooks.get(rowIndex).getISBN());
                preparedStatement.executeUpdate();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AdminNavigator newp = new AdminNavigator();
        newp.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnFıleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFıleActionPerformed
        try ( BufferedWriter writer = new BufferedWriter(new FileWriter("books.txt"))) {
            // Başlık satırı
            writer.write("Name, ISBN, Type, Author, Price, Stock");
            writer.newLine();

            // Kitap bilgileri
            for (Books book : DataBase.allbooks) {
                String line = String.format("%s, %d, %s, %s, %.2f, %d",
                        book.getName(), book.getISBN(), book.getType().toString(),
                        book.getAuthor(), book.getPrice(), book.getStock());
                writer.write(line);
                writer.newLine();
            }

            System.out.println("Books written to file successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnFıleActionPerformed

    private void btnQuery1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuery1ActionPerformed

        try {
            if (txtISBN.getText().isEmpty() && txtAuthor.getText().isEmpty() && txtName.getText().isEmpty() && jComboBox1.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(this, "Please fill at least one field", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Initialize SQL query
            StringBuilder sqlQuery = new StringBuilder("SELECT name, ISBN, type, author, price, stock FROM books WHERE ");

            // Build the WHERE clause based on the filled criteria
            if (!txtISBN.getText().isEmpty()) {
                try {
                    sqlQuery.append("ISBN = ? AND ");
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Invalid ISBN format. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            if (!txtAuthor.getText().isEmpty()) {
                sqlQuery.append("author = ? AND ");
            }
            if (!txtName.getText().isEmpty()) {
                sqlQuery.append("name = ? AND ");
            }
            if (jComboBox1.getSelectedIndex() != 0) {
                sqlQuery.append("type = ? AND ");
            }

            // Remove the trailing " AND " if it exists
            if (sqlQuery.toString().endsWith(" AND ")) {
                sqlQuery.setLength(sqlQuery.length() - 5);
            }

            // Prepare the statement
            try ( Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "root");  PreparedStatement preparedStatement = connection.prepareStatement(sqlQuery.toString())) {

                int parameterIndex = 1;

                // Set parameters based on filled criteria
                if (!txtISBN.getText().isEmpty()) {
                    try {
                        preparedStatement.setInt(parameterIndex++, Integer.parseInt(txtISBN.getText()));
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(this, "Invalid ISBN format. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                if (!txtAuthor.getText().isEmpty()) {
                    preparedStatement.setString(parameterIndex++, txtAuthor.getText());
                }
                if (!txtName.getText().isEmpty()) {
                    preparedStatement.setString(parameterIndex++, txtName.getText());
                }
                if (jComboBox1.getSelectedIndex() != 0) {
                    preparedStatement.setString(parameterIndex++, jComboBox1.getSelectedItem().toString());
                }

                // Execute the query
                ResultSet resultSet = preparedStatement.executeQuery();

                // Populate the table model
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);

                while (resultSet.next()) {
                    model.addRow(new String[]{
                        resultSet.getString("name"),
                        String.valueOf(resultSet.getInt("ISBN")),
                        resultSet.getString("type"),
                        resultSet.getString("author"),
                        String.valueOf(resultSet.getDouble("price")),
                        String.valueOf(resultSet.getInt("stock"))
                    });
                }

                // Değişiklikleri jTable'e bildir
                model.fireTableDataChanged();
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error querying the database", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnQuery1ActionPerformed

    private void SetStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetStockActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        // Seçili satırın isbn değerini al
        String selectedIsbn = tableModel.getValueAt(selectedRow, 1).toString();

        for (Books book : DataBase.allbooks) {
            if (book.getISBN() == Integer.parseInt(selectedIsbn)) {
                book.setStock(Integer.parseInt(txtstock.getText()));
                break;
            }
        }
        tableModel.setValueAt(Integer.parseInt(txtstock.getText()), selectedRow, 5); // 5. sütun stock sütunu

        try ( Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "root")) {
            // SQL sorgusunu oluştur
            String updateQuery = "UPDATE books SET stock = ? WHERE ISBN = ?";
            try ( PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
                // Parametreleri set et
                preparedStatement.setInt(1, Integer.parseInt(txtstock.getText()));
                preparedStatement.setInt(2, Integer.parseInt(selectedIsbn));

                preparedStatement.executeUpdate();
                JOptionPane.showMessageDialog(this, "Stock updated in database");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_SetStockActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        refreshTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBooks.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBooks.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBooks.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBooks.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SetPrice;
    private javax.swing.JButton SetStock;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFıle;
    private javax.swing.JButton btnQuery1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtstock;
    // End of variables declaration//GEN-END:variables
}
