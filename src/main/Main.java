/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.bookstoreautomation;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sozcu
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    Customer temp;

    public Main() {
        initComponents();
    }
    String[] columnNames = {"Author", "Book Name", "Book Type", "Price", "Stars"};

    private DefaultListModel<String> bookListModel = new DefaultListModel(); //QUERYDEKİ LİSTE
    private DefaultListModel<String> basketListModel = new DefaultListModel();
    private DefaultTableModel bestPreferedModel = new DefaultTableModel();

    private ArrayList<Integer> usedOrderNumbers = new ArrayList();

    public Main(Customer temp) {
        initComponents();
        this.temp = temp;

        BasketList.setModel(basketListModel);

        for (Books book : DataBase.allbooks) {
            bookListModel.addElement("Book Name: " + book.getName()
                    + ", Author: " + book.getAuthor()
                    + ", Publisher: " + book.getPublisher()
                    + ", Stars:" + book.getStars()
            );
        }

        jList1.setModel(bookListModel);

        for (String publisher : DataBase.publishers) {
            jComboBox1.addItem(publisher.toString());
        }

        bestPreferedModel.setColumnIdentifiers(columnNames);
        BestPrefered.setModel(bestPreferedModel);

        for (Books book : DataBase.bestbooks) {
            if (book != null) {
                String[] rowData = {book.getAuthor(), book.getName() + "", book.getType() + "", book.getPrice() + "", String.valueOf(book.getStars())};
                bestPreferedModel.addRow(rowData);

            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu2 = new javax.swing.JPopupMenu();
        AddOne = new javax.swing.JMenuItem();
        DeleteOne = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jPanel10 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        Basket = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        QUERY = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        EXİT1 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        setstar = new javax.swing.JButton();
        starfield = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BestPrefered = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        booknameTXT = new javax.swing.JTextField();
        authorTXT = new javax.swing.JTextField();
        publisherTXT = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ISBNTXT = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        surname = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        SaveBtn = new javax.swing.JButton();
        ShowOrderbtn = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        password = new javax.swing.JTextField();
        Phone = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        adres = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        BasketList = new javax.swing.JList<>();
        jLabel26 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        jPopupMenu2.setToolTipText("");
        jPopupMenu2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPopupMenu2.setBorderPainted(false);
        jPopupMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        AddOne.setText("Add One");
        AddOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddOneActionPerformed(evt);
            }
        });
        jPopupMenu2.add(AddOne);

        DeleteOne.setText("Delete One");
        DeleteOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteOneActionPerformed(evt);
            }
        });
        jPopupMenu2.add(DeleteOne);

        jMenu1.setText("jMenu1");

        jPanel10.setBackground(new java.awt.Color(0, 153, 153));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 228, 168));
        jLabel24.setText("Basket");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jLabel24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel24)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Basket.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Basket.setComponentPopupMenu(jPopupMenu2);

        jPanel1.setBackground(new java.awt.Color(255, 248, 232));
        jPanel1.setPreferredSize(new java.awt.Dimension(650, 744));

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose One" }));

        QUERY.setBackground(new java.awt.Color(255, 255, 255));
        QUERY.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        QUERY.setText("QUERY");
        QUERY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QUERYActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jButton9.setText("Add Basket");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        EXİT1.setBackground(new java.awt.Color(255, 255, 255));
        EXİT1.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        EXİT1.setText("EXIT");
        EXİT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXİT1ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel15.setText("Book Name:");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel20.setText("Publisher :");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel21.setText("Author :");

        jPanel9.setBackground(new java.awt.Color(0, 153, 153));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 228, 168));
        jLabel23.setText("Books");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton2.setText("Show All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setstar.setBackground(new java.awt.Color(255, 255, 255));
        setstar.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        setstar.setText("Give Star");
        setstar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setstarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel21)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(QUERY, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(starfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(setstar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(EXİT1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(QUERY)
                            .addComponent(jButton2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(starfield, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(setstar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EXİT1)
                .addGap(152, 152, 152))
        );

        Basket.addTab("Query", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 248, 232));

        BestPrefered.setAutoCreateRowSorter(true);
        BestPrefered.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Author", "Book Name", "Book Type", "Price", "Stars"
            }
        ));
        jScrollPane2.setViewportView(BestPrefered);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jButton4.setText("Add Basket");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        booknameTXT.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        booknameTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booknameTXTActionPerformed(evt);
            }
        });

        authorTXT.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        authorTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorTXTActionPerformed(evt);
            }
        });

        publisherTXT.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        publisherTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherTXTActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel9.setText("Category :");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel11.setText("Publisher :");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel12.setText("Author :");

        ISBNTXT.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ISBNTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ISBNTXTActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel13.setText("ISBN :");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CHOOSE ONE", "NOVEL", "POETRY", "SCIENCE_FICTION", "HISTORY", "BIOGRAPHY", "EDUCATION", "CHILDREN", "OTHER" }));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel14.setText("Book Name: ");

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jButton5.setText("Query");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(0, 153, 153));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 228, 168));
        jLabel22.setText("Most Prefered Books");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(188, 188, 188))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel22)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton8.setText("Show All");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(ISBNTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(authorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(booknameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(publisherTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28))
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(authorTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publisherTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ISBNTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(booknameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        Basket.addTab("Best Prefered", jPanel2);

        jPanel5.setBackground(new java.awt.Color(255, 248, 232));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(253, 217, 135), 2));

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 228, 168));
        jLabel6.setText("My Account");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel6)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("User Name :");

        username.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("E-Mail :");

        email.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("Surname :");

        surname.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setText("Name : ");

        name.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        SaveBtn.setBackground(new java.awt.Color(255, 255, 255));
        SaveBtn.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        SaveBtn.setText("Save ");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        ShowOrderbtn.setBackground(new java.awt.Color(255, 255, 255));
        ShowOrderbtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        ShowOrderbtn.setText("Show Orders");
        ShowOrderbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowOrderbtnActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel18.setText("Password :");

        password.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        Phone.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Phone.setText("Phone :");

        phone.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel19.setText("Address :");

        adres.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adres, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Phone)
                                    .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addContainerGap())
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ShowOrderbtn)
                                        .addGap(19, 19, 19))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel16)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Phone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(SaveBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ShowOrderbtn)))
                .addContainerGap(173, Short.MAX_VALUE))
        );

        Basket.addTab("My Account", jPanel5);

        jPanel11.setBackground(new java.awt.Color(255, 248, 232));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel11MouseEntered(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(0, 153, 153));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 228, 168));
        jLabel25.setText("Basket");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jLabel25)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel25)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        BasketList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(BasketList);

        jLabel26.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel26.setText("Price :");

        price.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(255, 255, 255));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton10.setText("Confirm");
        jButton10.setMaximumSize(new java.awt.Dimension(85, 37));
        jButton10.setMinimumSize(new java.awt.Dimension(85, 37));
        jButton10.setPreferredSize(new java.awt.Dimension(85, 37));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(255, 255, 255));
        jButton11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton11.setText("Clear Basket");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(18, 18, 18)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jButton11)
                .addGap(0, 111, Short.MAX_VALUE))
        );

        Basket.addTab("Basket", jPanel11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Basket, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Basket, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddOneActionPerformed
        int selectedIndex = BasketList.getSelectedIndex();
        if (selectedIndex != -1) {
            // Seçili eleman varsa, seçili elemanı al
            Object selectedObject = BasketList.getSelectedValue();

            // Seçilen elemanı bir tane daha ekleyerek BasketListModel'e ekle
            basketListModel.addElement(selectedObject.toString());

            // Eğer gerekirse listedeki seçimi temizle
            BasketList.clearSelection();

            // jList'i güncelle
            BasketList.setModel(basketListModel);

            // Toplam fiyatı güncelle
            double totalPrice = calculateTotalPrice();
            price.setText(Double.toString(totalPrice));
        } else {
            // Seçili bir eleman yoksa, kullanıcıyı uyaran bir bilgi mesajı göster
            JOptionPane.showMessageDialog(this, "No book selected.", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_AddOneActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened


    }//GEN-LAST:event_formWindowOpened
    public static void updateStock(String bookName, String author) {
        String url = "jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String user = "root";
        String password = "root";

        try ( Connection connection = DriverManager.getConnection(url, user, password)) {
            String updateQuery = "UPDATE books SET stock = stock - 1 WHERE name = ? AND author = ?";

            try ( PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
                preparedStatement.setString(1, bookName);
                preparedStatement.setString(2, author);

                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    System.out.println("Stock updated successfully for '" + bookName + "' by '" + author + "'.");
                } else {
                    System.out.println("No matching record found for '" + bookName + "' by '" + author + "'.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void DeleteOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteOneActionPerformed
        int selectedIndex = BasketList.getSelectedIndex();
        if (selectedIndex != -1) {
            // Seçili eleman varsa, seçili elemanı al
            Object selectedObject = BasketList.getSelectedValue();

            // BasketListModel'den seçili elemanı kaldır
            basketListModel.removeElement(selectedObject);

            // Diğer işlemleri yapabilirsiniz, örneğin seçilen elemanla ilgili başka bir işlem yapma
            // Örneğin, seçili kitabın bilgilerini konsola yazdırma:
            System.out.println("Selected Book: " + selectedObject.toString());

            // Eğer gerekirse listedeki seçimi temizle
            BasketList.clearSelection();

            // jList'i güncelle
            BasketList.setModel(basketListModel);
            double totalPrice = calculateTotalPrice();
            price.setText(Double.toString(totalPrice));
        } else {
            // Seçili bir eleman yoksa, kullanıcıyı uyaran bir bilgi mesajı göster
            JOptionPane.showMessageDialog(this, "No book selected.", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_DeleteOneActionPerformed

    private void ShowOrderbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowOrderbtnActionPerformed
        String fileName = "customer_orders_" + temp.getId() + ".txt";

        try ( BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            for (Order order : DataBase.allOrders) {
                if (order.getCustomer().equals(temp)) {
                    writer.write("Order Number: " + order.getOrderNumber() + "\n");
                    writer.write("Order Date: " + order.getOrderDate() + "\n");
                    writer.write("Total Price: " + order.getTotalPrice() + "\n");

                    // Diğer sipariş detaylarına ait bilgileri yazdırabilirsiniz
                    for (Books book : order.getOrderedBooks()) {
                        writer.write("Book: " + book.getName() + ", Price: " + book.getPrice() + "\n");
                        // Diğer kitap bilgilerini de yazdırabilirsiniz
                    }

                    writer.write("---------------------");
                }
            }

            System.out.println("Orders for customer " + temp.getId() + " written to file: " + fileName);
        } catch (IOException e) {
            System.err.println("Error writing orders to file: " + e.getMessage());
        }

    }//GEN-LAST:event_ShowOrderbtnActionPerformed

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed

        if (!name.getText().isEmpty() || !surname.getText().isEmpty() || !email.getText().isEmpty() || !phone.getText().isEmpty() || !adres.getText().isEmpty()) {
            try {
                Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL", "root", "root");

                // Check if the entered username is unique
                String checkUsernameQuery = "SELECT COUNT(*) FROM customers WHERE username = ?";
                try ( PreparedStatement checkUsernameStatement = connection.prepareStatement(checkUsernameQuery)) {
                    checkUsernameStatement.setString(1, username.getText());
                    ResultSet resultSet = checkUsernameStatement.executeQuery();
                    resultSet.next();
                    int count = resultSet.getInt(1);

                    if (count == 0) {
                        // Username is unique, proceed with updating temp object and database
                        // Assuming you have a TempObject class with appropriate methods to set values
                        if (!name.getText().isEmpty()) {
                            temp.setName(name.getText());
                        }
                        if (!surname.getText().isEmpty()) {
                            temp.setSurname(surname.getText());
                        }
                        if (!email.getText().isEmpty()) {
                            temp.setEmail(email.getText());
                        }
                        if (!phone.getText().isEmpty()) {
                            temp.setPhone(phone.getText());
                        }
                        if (!adres.getText().isEmpty()) {
                            temp.setAddress(adres.getText());
                        }

                        // Update the temp object as needed
                        // Update the "customer" table in the database
                        String updateQuery = "UPDATE customers SET name = ?, surname = ?, email = ?, phone = ?, address = ? WHERE username = ?";
                        try ( PreparedStatement updateStatement = connection.prepareStatement(updateQuery)) {
                            updateStatement.setString(1, temp.getName());
                            updateStatement.setString(2, temp.getSurname());
                            updateStatement.setString(3, temp.getEmail());
                            updateStatement.setString(4, temp.getPhone());
                            updateStatement.setString(5, temp.getAddress());
                            updateStatement.setString(6, temp.getUsername());

                            updateStatement.executeUpdate();

                            System.out.println("Update successful");
                        }
                    } else {
                        // Username is not unique
                        System.out.println("Username is taken. Choose another username.");
                    }
                }

                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            // No fields are filled
            System.out.println("No fields are filled.");
        }
    }//GEN-LAST:event_SaveBtnActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        bestPreferedModel.setRowCount(0);

        for (Books book : DataBase.bestbooks) {
            if (book != null) {
                String[] rowData = {book.getAuthor(), book.getName() + "", book.getType() + "", book.getPrice() + "", book.getStars() + ""};
                bestPreferedModel.addRow(rowData);

            }
        }

        BestPrefered.setModel(bestPreferedModel);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            int isbn;
            if (ISBNTXT.getText().isEmpty()) {
                isbn = 0;
            } else {
                isbn = Integer.parseInt(ISBNTXT.getText());
            }

            String author = authorTXT.getText();
            String name = booknameTXT.getText();
            String category = jComboBox2.getSelectedItem().toString();
            String publisher = publisherTXT.getText();

            bestPreferedModel.setRowCount(0);

            for (Books book : DataBase.bestbooks) {
                if ((isbn == 0 || book.getISBN() == isbn)
                        && (author.isEmpty() || book.getAuthor().equals(author))
                        && (name.isEmpty() || book.getName().equals(name))
                        && (publisher.isEmpty() || book.getPublisher().equals(publisher))
                        && (jComboBox2.getSelectedIndex() == 0 || (jComboBox2.getSelectedIndex() > 0 && book.getType().toString().equals(category)))) {

                    bestPreferedModel.addRow(new Object[]{book.getAuthor(), book.getName(), book.getType(), book.getPrice(), book.getStars()});
                }
            }
        } catch (NumberFormatException e) {
            // ISBN, sayısal bir ifadeye dönüştürülemedi
            JOptionPane.showMessageDialog(this, "Write a valid number for ISBN.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        BestPrefered.setModel(bestPreferedModel);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void ISBNTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ISBNTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ISBNTXTActionPerformed

    private void publisherTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publisherTXTActionPerformed

    private void authorTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorTXTActionPerformed

    private void booknameTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booknameTXTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_booknameTXTActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (BestPrefered.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table", "Select Row", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String bookName = bestPreferedModel.getValueAt(BestPrefered.getSelectedRow(), 1).toString();
            String author = bestPreferedModel.getValueAt(BestPrefered.getSelectedRow(), 0).toString();

            for (Books bestbook : DataBase.bestbooks) {

                if (bestbook.getAuthor().equals(author) && (bestbook.getName().equals(bookName))) {

                    String publisher = bestbook.getPublisher();
                    String listItem = "Book Name: " + bookName
                            + ", Author: " + author
                            + ", Publisher: " + publisher;
                    basketListModel.addElement(listItem);

                    break;
                }

            }

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        bookListModel.clear();

        for (Books book : DataBase.allbooks) {
            bookListModel.addElement("Book Name: " + book.getName()
                    + ", Author: " + book.getAuthor()
                    + ", Publisher: " + book.getPublisher()
                    + ", Stars:" + book.getStars()
            );
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void EXİT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXİT1ActionPerformed

        CustomerLogın newp = new CustomerLogın();
        newp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_EXİT1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        int selectedIndex = jList1.getSelectedIndex();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table", "Select Row", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Object selectedObject = bookListModel.getElementAt(selectedIndex);

            // Check for null before proceeding
            if (selectedObject != null) {
                String selectedItem = selectedObject.toString();

                // Rest of the code remains the same
                String[] bookDetails = selectedItem.split(", ");
                String bookName = bookDetails[0].substring(bookDetails[0].indexOf(":") + 2);
                String author = bookDetails[1].substring(bookDetails[1].indexOf(":") + 2);

                // Assuming bestbooks is a collection of Books
                for (Books bestbook : DataBase.allbooks) {
                    if (bestbook.getAuthor().equals(author) && bestbook.getName().equals(bookName)) {
                        String publisher = bestbook.getPublisher();
                        String listItem = "Book Name: " + bookName
                                + ", Author: " + author
                                + ", Publisher: " + publisher;
                        basketListModel.addElement(listItem);
                        // No need to set the bestPreferedModel again here
                        break;
                    }
                }
            } else {
                // Handle the case where the selected object is null
                JOptionPane.showMessageDialog(this, "Selected row is null", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void QUERYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QUERYActionPerformed

        String bookname = jTextField1.getText().toLowerCase();
        String authorname = jTextField2.getText().toLowerCase();
        String publisher = ((String) jComboBox1.getSelectedItem()).toLowerCase();

        // Clear the existing items in the list
        bookListModel.clear();

        for (Books book : DataBase.allbooks) {
            // Convert the fields to lowercase for case-insensitive comparison
            String bookNameLowerCase = book.getName().toLowerCase();
            String authorNameLowerCase = book.getAuthor().toLowerCase();
            String publisherLowerCase = book.getPublisher().toLowerCase();

            if ((bookname.isEmpty() || bookNameLowerCase.equals(bookname))
                    && (authorname.isEmpty() || authorNameLowerCase.equals(authorname))
                    && (jComboBox1.getSelectedIndex() == 0 || (jComboBox1.getSelectedIndex() > 0 && publisherLowerCase.equals(publisher)))) {

                bookListModel.addElement("Book Name: " + book.getName()
                        + ", Author: " + book.getAuthor()
                        + ", Publisher: " + book.getPublisher()
                        + ", Stars:" + book.getStars()
                );
            }
        }

        // Notify that the data in the bestPreferedModel has changed
        jList1.setModel(bookListModel);
    }//GEN-LAST:event_QUERYActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed
    private boolean isOrderNumberExists(int orderNumber) {
        String url = "jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL";

        try ( Connection connection = DriverManager.getConnection(url, "root", "root")) {
            String sql = "SELECT orderid FROM orders WHERE orderid = ?";
            try ( PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setInt(1, orderNumber);
                try ( ResultSet resultSet = statement.executeQuery()) {
                    return resultSet.next();
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return true; // Hata durumunda varmış gibi kabul et
        }
    }


    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Do you want to confirm the basket");

        if (result == JOptionPane.YES_OPTION) {
            // Orders listesine eklemek için yeni bir sipariş oluştur
            Order newOrder = new Order();

            newOrder.setCustomer(temp);

            // Sipariş numarasını oluştur ve veritabanında kontrol et
            int numberorder;
            do {
                numberorder = generateOrderNumber();
            } while (isOrderNumberExists(numberorder));

            newOrder.setOrderNumber(numberorder);
            newOrder.setOrderDate(new Date());

            double totalOrderPrice = 0;

            for (int i = 0; i < basketListModel.size(); i++) {
                String listItem = basketListModel.getElementAt(i);

                // Kitap adını, yazarı ve yayıncısını çıkart
                String[] parts = listItem.split(", Author: |, Publisher: ");
                String bookName = parts[0].substring(11);  // "Book Name: " kısmını atla
                String author = parts[1];
                String publisher = parts[2];

                for (Books book : DataBase.allbooks) {
                    if (book.getName().equals(bookName) && book.getAuthor().toString().equals(author) && book.getPublisher().toString().equals(publisher)) {
                        book.setStock(book.getStock() - 1);
                        updateStock(book.getName(), book.getAuthor());

                        newOrder.orderedBooks.add(book);

                        totalOrderPrice += book.getPrice();
                    }
                }
            }

            newOrder.setTotalPrice(totalOrderPrice);

            // Sipariş numarasını kullanarak veritabanında kontrol et
            if (!isOrderNumberExists(newOrder.getOrderNumber())) {
                // Eğer sipariş numarası veritabanında yoksa, siparişi ekleyebiliriz
                String url = "jdbc:mysql://localhost:3306/mysql?zeroDateTimeBehavior=CONVERT_TO_NULL";

                try ( Connection connection = DriverManager.getConnection(url, "root", "root")) {
                    String sql = "INSERT INTO orders (orderid, date, totalprice, customername, customersurname, customerusername) VALUES (?, ?, ?, ?, ?, ?)";

                    try ( PreparedStatement statement = connection.prepareStatement(sql)) {
                        statement.setInt(1, newOrder.getOrderNumber());
                        statement.setDate(2, new java.sql.Date(newOrder.getOrderDate().getTime()));
                        statement.setDouble(3, newOrder.getTotalPrice());  // totalprice değeri düzeltilmiş
                        statement.setString(4, newOrder.getCustomer().getName());
                        statement.setString(5, newOrder.getCustomer().getSurname());
                        statement.setString(6, newOrder.getCustomer().getUsername());
                        statement.executeUpdate();
                    } catch (SQLException e) {
                        e.printStackTrace(); // Hata durumunda hata izleme
                    }

                } catch (SQLException e) {
                    e.printStackTrace(); // Hata durumunda hata izleme
                }

                // Siparişe ürünü ekle
                // Toplam fiyatı güncelle
            }

            // Siparişi genel sipariş listesine ekle
            DataBase.allOrders.add(newOrder);

            // JList'i temizle
            basketListModel.clear();
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        basketListModel.removeAllElements();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jPanel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel11MouseEntered
        double totalPrice = calculateTotalPrice();
        price.setText(Double.toString(totalPrice));
    }//GEN-LAST:event_jPanel11MouseEntered
    int numberofrate = 1;

    private void setstarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setstarActionPerformed
        int selectedIndex = jList1.getSelectedIndex();

        if (selectedIndex != -1) { // Check if an item is selected
            String selectedItem = bookListModel.getElementAt(selectedIndex).toString();

            String[] bookDetails = selectedItem.split(", ");
            String bookName = bookDetails[0].substring(bookDetails[0].indexOf(":") + 2);
            String author = bookDetails[1].substring(bookDetails[1].indexOf(":") + 2);

            try {
                double newStarValue = Double.parseDouble(starfield.getText());

                for (Books book : DataBase.allbooks) {
                    if (book.getAuthor().equals(author) && book.getName().equals(bookName)) {
                        // Calculate new stars
                        double newStars = (book.getStars() * numberofrate + newStarValue) / (numberofrate + 1);
                        numberofrate++;

                        // Update the book's stars
                        book.setStars(newStars);

                        // Update the model with the modified book details
                        bookListModel.set(selectedIndex,
                                "Book Name: " + book.getName()
                                + ", Author: " + book.getAuthor()
                                + ", Publisher: " + book.getPublisher()
                                + ", Stars:" + book.getStars()
                        );
                        System.out.println(book.getStars());

                        // Update the JList with the modified model
                        jList1.setModel(bookListModel);

                        // Continue with the rest of your code here
                        break;
                    }
                }

                UpdateBestPrefered();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a valid numeric value for stars.", "Input Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a book from the list.", "Selection Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_setstarActionPerformed
    void UpdateBestPrefered() {
        DataBase.bestbooks.clear();

        // Update DataBase.bestbooks based on isBestPrefered method
        for (Books book : DataBase.allbooks) {
            Books.isBestPrefered(book);
        }

        // Clear and update the table model
        bestPreferedModel.setRowCount(0);

        for (Books book : DataBase.bestbooks) {
            if (book != null) {

                String[] rowData = {book.getAuthor(), book.getName(), String.valueOf(book.getType()), String.valueOf(book.getPrice()), String.valueOf(book.getStars())};
                bestPreferedModel.addRow(rowData);
            }
        }

        // Update the JTable with the modified model
        BestPrefered.setModel(bestPreferedModel);
    }

    private int generateOrderNumber() {
        SecureRandom random = new SecureRandom();
        int orderNumber;

        do {
            orderNumber = random.nextInt(10000);
        } while (usedOrderNumbers.contains(orderNumber));

        usedOrderNumbers.add(orderNumber);

        return orderNumber;
    }

    private double calculateTotalPrice() {
        double totalPrice = 0;

        for (int i = 0; i < basketListModel.size(); i++) {
            String listItem = basketListModel.getElementAt(i);

            String[] parts = listItem.split(", Author: |, Publisher: ");
            String bookName = parts[0].substring(11);  // "Book Name: " kısmını atla
            String author = parts[1];
            String publisher = parts[2];

            for (Books book : DataBase.allbooks) {
                if (book.getName().equals(bookName) && book.getAuthor().equals(author) && book.getPublisher().equals(publisher)) {
                    totalPrice += book.getPrice();
                    break;
                }
            }
        }

        return totalPrice;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddOne;
    private javax.swing.JTabbedPane Basket;
    private javax.swing.JList<String> BasketList;
    private javax.swing.JTable BestPrefered;
    private javax.swing.JMenuItem DeleteOne;
    private javax.swing.JButton EXİT1;
    private javax.swing.JTextField ISBNTXT;
    private javax.swing.JLabel Phone;
    private javax.swing.JButton QUERY;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JButton ShowOrderbtn;
    private javax.swing.JTextField adres;
    private javax.swing.JTextField authorTXT;
    private javax.swing.JTextField booknameTXT;
    private javax.swing.JTextField email;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField name;
    private javax.swing.JTextField password;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField price;
    private javax.swing.JTextField publisherTXT;
    private javax.swing.JButton setstar;
    private javax.swing.JTextField starfield;
    private javax.swing.JTextField surname;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
